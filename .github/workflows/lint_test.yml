name: Lint and Test

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint_test:
    if: '!cancelled()'
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
    steps:
      - uses: actions/checkout@v4
      - name: Set up uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "latest"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/uv.lock') }}
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Type check
        run: uv run mypy nowplaying
      - name: Lint
        run: uv run ruff check --output-format=github
      - name: Format check
        run: uv run ruff format --check
      - name: Run tests
        run: |
          cp .env.example .env
          uv run pytest . --exitfirst
      - name: Minimize uv cache
        run: uv cache prune --ci
