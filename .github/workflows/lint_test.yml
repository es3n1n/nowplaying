name: Lint and Test

on:
  pull_request:
    paths:
      - 'nowplaying/**'
      - 'tests/**'
      - '.github/**'
      - 'pyproject.toml'
      - 'uv.lock'
  push:
    branches:
      - master
    paths:
      - 'nowplaying/**'
      - 'tests/**'
      - '.github/**'
      - 'pyproject.toml'
      - 'uv.lock'

jobs:
  lint_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']

    env:
      UV_CACHE_DIR: ~/.cache/uv

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up uv
      uses: astral-sh/setup-uv@v1

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ${{ env.UV_CACHE_DIR }}
        key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ matrix.python-version }}-

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Run mypy
      run: uv run mypy nowplaying

    - name: Run ruff check
      run: uv run ruff check --output-format=github .

    - name: Run ruff format
      run: uv run ruff format --check .

    - name: Run tests
      run: |
        cp .env.example .env
        uv run pytest . --exitfirst

    - name: Prune uv cache
      run: uv cache prune
