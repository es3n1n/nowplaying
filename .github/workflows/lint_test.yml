name: Lint and test

on:
  pull_request: {}
  push:
    branches:
      - master

jobs:
  lint_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Type check
        if: '!cancelled()'
        run: |
          source .venv/bin/activate
          mypy nowplaying

      - name: Lint
        if: '!cancelled()'
        run: |
          source .venv/bin/activate
          ruff check --output-format=github

      - name: Format check
        if: '!cancelled()'
        run: |
          source .venv/bin/activate
          ruff format --check

      - name: Install FFmpeg
        if: '!cancelled()'
        run: |
          sudo apt-get update
          sudo apt-get install -yq --no-install-recommends ffmpeg

      - name: Test
        if: '!cancelled()'
        run: |
          source .venv/bin/activate
          cp .env.example .env
          pytest . --exitfirst
